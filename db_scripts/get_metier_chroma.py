from pymongo import MongoClient
import chromadb

# Connexion √† MongoDB
mongo_client = MongoClient("")  # Modifie avec ton URI MongoDB
mongo_db = mongo_client["chatbot_data"]
mongo_collection = mongo_db["metiers"]

# Connexion √† ChromaDB
chroma_client = chromadb.PersistentClient(path="")  # V√©rifie le bon chemin
collection = chroma_client.get_or_create_collection("metier")

# R√©cup√©ration des documents MongoDB
documents = list(mongo_collection.find({}, {"_id": 0}))  # Exclut _id pour √©viter les probl√®mes

if not documents:
    print("‚ö†Ô∏è Aucune donn√©e trouv√©e dans MongoDB. V√©rifie que la base n'est pas vide.")

# Ajout des documents dans ChromaDB
for idx, doc in enumerate(documents):
    doc_id = f"doc_{idx}"  # G√©n√®re un ID unique pour ChromaDB
    metadata = {
        "id": doc.get("id", ""),
        "titre": doc.get("titre", ""),
        "url_fiche_metier": doc.get("url_fiche_metier", "")
    }  # M√©tadonn√©es

    # Cr√©e un texte composite √† partir des champs r√©cup√©r√©s
    text = f"Titre: {doc.get('titre', '')}, URL: {doc.get('url_fiche_metier', '')}"

    # Ajout dans ChromaDB
    collection.add(
        ids=[doc_id],
        documents=[text],  # Remplace par un embedding si n√©cessaire
        metadatas=[metadata]
    )

    print(f"‚úÖ Document ajout√© : {doc_id} - {text}")

print("üöÄ Migration termin√©e avec succ√®s !")

# V√©rification des collections existantes
collections = chroma_client.list_collections()
print("üìÇ Collections disponibles :", collections)
